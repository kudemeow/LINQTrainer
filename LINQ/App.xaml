<Application x:Class="LINQ.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LINQ.ViewModels"
             xmlns:font="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             Startup="ApplicationStart">
    <Application.Resources>
        <local:LoginViewModel x:Key="LoginViewModel"/>
        <local:RegistrationViewModel x:Key="RegistrationViewModel"/>
        <local:UserMainViewModel x:Key="UserMainViewModel"/>
        <local:TheoryViewModel x:Key="TheoryViewModel"/>
        <local:TasksViewModel x:Key="TasksViewModel"/>
        <local:ResultViewModel x:Key="ResultViewModel"/>
        <local:AdminViewModel x:Key="AdminViewModel"/>

        <Color x:Key="primaryBackColor1">#0A003A</Color>
        <Color x:Key="primaryBackColor2">#1C0E49</Color>
        <Color x:Key="secondaryBackColor1">#24105F</Color>
        <Color x:Key="secondaryBackColor2">#210F55</Color>
        <!--Window Border Colors-->
        <Color x:Key="winBorderColor1">#6D2FFF</Color>
        <Color x:Key="winBorderColor2">#FB539B</Color>
        <Color x:Key="winBorderColor3">#836EFB</Color>
        <!--Color Palette-->
        <SolidColorBrush x:Key="color1" Color="#E285DE"/>
        <SolidColorBrush x:Key="color2" Color="#784DFD"/>
        <SolidColorBrush x:Key="color3" Color="#4ADAEC"/>
        <SolidColorBrush x:Key="color4" Color="#FB539B"/>
        <SolidColorBrush x:Key="color5" Color="#7E82FC"/>
        <SolidColorBrush x:Key="color6" Color="#FFC047"/>
        <SolidColorBrush x:Key="color7" Color="#EF6C96"/>
        <SolidColorBrush x:Key="color8" Color="#78A3FC"/>
        <SolidColorBrush x:Key="color9" Color="#07F3C0"/>
        <SolidColorBrush x:Key="color10" Color="#FBA1AA"/>
        <!--Font Colors-->
        <SolidColorBrush x:Key="title" Color="#000000"/>
        <SolidColorBrush x:Key="titleColor1" Color="#E0E1F1"/>
        <SolidColorBrush x:Key="titleColor2" Color="#D5CFF5"/>
        <SolidColorBrush x:Key="titleColor3" Color="#210F55"/>
        <SolidColorBrush x:Key="plainTextColor1" Color="#9497CD"/>
        <SolidColorBrush x:Key="plainTextColor2" Color="#7C80C2"/>
        <SolidColorBrush x:Key="plainTextColor3" Color="#7376BD"/>
        <!--Panel Colors-->
        <SolidColorBrush x:Key="panelColor" Color="#200F53"/>
        <SolidColorBrush x:Key="panelOverColor" Color="#281269"/>
        <SolidColorBrush x:Key="panelActiveColor" Color="#2B1372"/>

        <Style x:Key="controlButton" TargetType="Button">
            <!--Normal button style-->
            <Setter Property="Height" Value="50"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#9497CD"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Button Style on hover-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2B1372"/>
                    <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="controlRadioButton" TargetType="RadioButton">
            <!--Normal button style-->
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#9497CD"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Button Style on hover-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2B1372"/>
                    <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="controlButtonIcon" TargetType="font:IconImage">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
        </Style>

        <!--Menu button text-->
        <Style x:Key="controlButtonText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#D5CFF5"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>


        <!--Icon button-->
        <Style x:Key="iconButton" TargetType="Button">
            <!--Normal button style-->
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#9497CD"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Button Style on hover-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Menu button icon-->
        <Style x:Key="iconButtonIcon" TargetType="font:IconImage">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="Foreground" Value="#D5CFF5"/>
        </Style>

    </Application.Resources>
</Application>
